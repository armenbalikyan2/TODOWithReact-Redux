{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Table,Input,InputNumber,Popconfirm,Form}from'antd';import{connect}from'react-redux';import{EditableCell}from'../common/EditableCell';import axios from'axios';import{getDataLoading as _getDataLoading,setDataLoading,removeDataLoading as _removeDataLoading}from'../../actions';export var taskId;export var editingtask;var TaskListPage=function TaskListPage(props){var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];if(props.tasks){var data=[];props.tasks.map(function(item){return data.push(item.task);});}useEffect(function(){props.getDataLoading();},[]);var handleDelete=function handleDelete(key){taskId=key;props.removeDataLoading();window.location.reload(false);};var columns=[{title:'name',dataIndex:'name',width:'25%',editable:true},{title:'operation',dataIndex:'operation',render:function render(text,record){return props.tasks.length>=1?/*#__PURE__*/React.createElement(Popconfirm,{title:\"Sure to delete?\",onConfirm:function onConfirm(){var value=props.tasks.filter(function(value){return value.task==record;});handleDelete(value[0].id);}},/*#__PURE__*/React.createElement(\"a\",null,\"Delete\")):null;}}];var mergedColumns=columns.map(function(col){if(!col.editable){return col;}return _objectSpread(_objectSpread({},col),{},{onCell:function onCell(record){return{record:record,inputType:col.dataIndex==='age'?'number':'text',dataIndex:col.dataIndex,title:col.title};}});});return/*#__PURE__*/React.createElement(Form,{form:form,component:false},/*#__PURE__*/React.createElement(Table,{components:{body:{cell:EditableCell}},bordered:true,dataSource:data,columns:mergedColumns}));};function mapStateToProps(state){return{tasks:state.tasks.userData};}function mapDispatchToProps(dispatch){return{getDataLoading:function getDataLoading(){return dispatch(_getDataLoading);},removeDataLoading:function removeDataLoading(){return dispatch(_removeDataLoading);}};}export default connect(mapStateToProps,mapDispatchToProps)(TaskListPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/components/taskList/TaskListPage.js"],"names":["React","useState","useEffect","Table","Input","InputNumber","Popconfirm","Form","connect","EditableCell","axios","getDataLoading","setDataLoading","removeDataLoading","taskId","editingtask","TaskListPage","props","useForm","form","tasks","data","map","item","push","task","handleDelete","key","window","location","reload","columns","title","dataIndex","width","editable","render","text","record","length","value","filter","id","mergedColumns","col","onCell","inputType","body","cell","mapStateToProps","state","userData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { EditableCell } from '../common/EditableCell';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  getDataLoading,\r\n  setDataLoading,\r\n  removeDataLoading,\r\n} from '../../actions';\r\n\r\nexport let taskId;\r\nexport let editingtask;\r\n\r\nconst TaskListPage = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  if (props.tasks) {\r\n    var data = [];\r\n    props.tasks.map((item) => data.push(item.task));\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getDataLoading();\r\n  }, []);\r\n\r\n  const handleDelete = (key) => {\r\n    taskId = key;\r\n    props.removeDataLoading();\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'name',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'operation',\r\n      dataIndex: 'operation',\r\n      render: (text, record) =>\r\n        props.tasks.length >= 1 ? (\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => {\r\n              let value = props.tasks.filter((value) => value.task == record);\r\n              handleDelete(value[0].id);\r\n            }}\r\n          >\r\n            <a>Delete</a>\r\n          </Popconfirm>\r\n        ) : null,\r\n    },\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: state.tasks.userData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDataLoading: () => dispatch(getDataLoading),\r\n    removeDataLoading: () => dispatch(removeDataLoading),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListPage);\r\n"]},"metadata":{},"sourceType":"module"}