{"ast":null,"code":"import { GET_DATA_SUCCESS, GET_DATA_LOADING, GET_DATA_FAILURE } from '../actions';\nconst initialState = {\n  gettingData: false,\n  data: []\n};\n\nfor (let i = 0; i < 5; i++) {\n  initialState.data.push({\n    key: i.toString(),\n    name: `Task ${i}`\n  });\n}\n\nexport function TaskReducer(state = [], action) {\n  switch (action.type) {\n    case GET_DATA_LOADING:\n      return { ...state,\n        gettingData: true\n      };\n\n    case GET_DATA_SUCCESS:\n      return { ...state,\n        gettingData: false,\n        data: action.payload\n      };\n\n    case GET_DATA_FAILURE:\n      return { ...state,\n        gettingData: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/reducers/TaskReducer.js"],"names":["GET_DATA_SUCCESS","GET_DATA_LOADING","GET_DATA_FAILURE","initialState","gettingData","data","i","push","key","toString","name","TaskReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BH,EAAAA,YAAY,CAACE,IAAb,CAAkBE,IAAlB,CAAuB;AACrBC,IAAAA,GAAG,EAAEF,CAAC,CAACG,QAAF,EADgB;AAErBC,IAAAA,IAAI,EAAG,QAAOJ,CAAE;AAFK,GAAvB;AAID;;AAED,OAAO,SAASK,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,gBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELR,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKJ,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELR,QAAAA,WAAW,EAAE,KAFR;AAGLC,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAHR,OAAP;;AAKF,SAAKb,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELR,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF;AACE,aAAOQ,KAAP;AAlBJ;AAoBD","sourcesContent":["import {\r\n  GET_DATA_SUCCESS,\r\n  GET_DATA_LOADING,\r\n  GET_DATA_FAILURE,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  gettingData: false,\r\n  data: [],\r\n};\r\n\r\nfor (let i = 0; i < 5; i++) {\r\n  initialState.data.push({\r\n    key: i.toString(),\r\n    name: `Task ${i}`,\r\n  });\r\n}\r\n\r\nexport function TaskReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case GET_DATA_LOADING:\r\n      return {\r\n        ...state,\r\n        gettingData: true,\r\n      };\r\n    case GET_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gettingData: false,\r\n        data: action.payload,\r\n      };\r\n    case GET_DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        gettingData: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}