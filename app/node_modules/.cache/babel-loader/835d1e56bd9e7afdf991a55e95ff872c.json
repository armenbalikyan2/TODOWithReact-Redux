{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\src\\\\components\\\\addTask\\\\AddingTaskPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport './inputScreen.css';\nimport { originData } from '../taskList/TaskListPage';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as taskActions from '../../actions/CreateTaskActions';\nimport { getDataLoading } from '../../actions';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nconst AddingTaskPage = props => {\n  useEffect(() => {\n    props.getDataLoading();\n  }, []);\n  console.log(props.tasks);\n\n  const onFinish = values => {\n    let task = {\n      key: props.tasks.length.toString(),\n      name: values.names.toString()\n    };\n    props.createTask(task);\n    props.history.push('/list');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"dynamic_form_item\"\n  }, formItemLayoutWithOutLabel, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.List, {\n    name: \"names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Task' : '',\n      required: false,\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input task's name or delete this field.\"\n      }],\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Add Task\",\n      style: {\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    })), fields.length > 1 ? /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      style: {\n        margin: '0 8px'\n      },\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), \" Add field\")));\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nAddingTaskPage.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  getDataLoading: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.userData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataLoading: () => dispatch(getDataLoading)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingTaskPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/components/addTask/AddingTaskPage.js"],"names":["React","useState","useEffect","Form","Input","Button","MinusCircleOutlined","PlusOutlined","originData","connect","PropTypes","taskActions","getDataLoading","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","AddingTaskPage","props","console","log","tasks","onFinish","values","task","key","length","toString","name","names","createTask","history","push","fields","add","remove","map","field","index","required","whitespace","message","width","margin","propTypes","array","isRequired","func","mapStateToProps","state","userData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './inputScreen.css';\r\nimport { originData } from '../taskList/TaskListPage';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as taskActions from '../../actions/CreateTaskActions';\r\nimport { getDataLoading } from '../../actions';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nconst AddingTaskPage = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.getDataLoading();\r\n  }, []);\r\n\r\n  console.log(props.tasks);\r\n  \r\n  const onFinish = (values) => {\r\n    let task = {\r\n      key: props.tasks.length.toString(),\r\n      name: values.names.toString(),\r\n    };\r\n    props.createTask(task);\r\n    props.history.push('/list');\r\n  };\r\n  return (\r\n    <div className=\"addTask\">\r\n      <Form\r\n        name=\"dynamic_form_item\"\r\n        {...formItemLayoutWithOutLabel}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.List name=\"names\">\r\n          {(fields, { add, remove }) => {\r\n            return (\r\n              <div>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    {...(index === 0\r\n                      ? formItemLayout\r\n                      : formItemLayoutWithOutLabel)}\r\n                    label={index === 0 ? 'Task' : ''}\r\n                    required={false}\r\n                    key={field.key}\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message:\r\n                            \"Please input task's name or delete this field.\",\r\n                        },\r\n                      ]}\r\n                      noStyle\r\n                    >\r\n                      <Input placeholder=\"Add Task\" style={{ width: '60%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        style={{ margin: '0 8px' }}\r\n                        onClick={() => {\r\n                          remove(field.name);\r\n                        }}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      add();\r\n                    }}\r\n                    style={{ width: '60%' }}\r\n                  >\r\n                    <PlusOutlined /> Add field\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddingTaskPage.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  getDataLoading: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: state.userData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDataLoading: () => dispatch(getDataLoading),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingTaskPage);\r\n"]},"metadata":{},"sourceType":"module"}