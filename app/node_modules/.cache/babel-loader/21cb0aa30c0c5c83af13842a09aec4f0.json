{"ast":null,"code":"import { getData, getUsersFailure, GET_USERS_LOADING } from \"../actions/user.actions\";\nimport { take, put, call, takeLatest } from 'redux-saga/effects';\nimport { getUsers } from \"../api/Api\";\n\nfunction* getUsersSaga() {\n  const response = yield call(getUsers); // function getFields(input, field1) {\n  //     let output = [];\n  //     for (let i=0; i < input.length ; ++i)\n  //         output.push(input[i][field1]);\n  //     return output;\n  // }\n  // console.log(response.data);\n\n  const data = response.data;\n\n  if (response.status !== 200) {\n    yield take(getUsersFailure);\n  }\n\n  yield put(getUsersSuccess(data));\n}\n\nexport function* watchGetDataSaga() {\n  yield takeLatest(GET_DATA_LOADING, GetDataSaga);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/sagas/GetDataSaga.js"],"names":["getData","getUsersFailure","GET_USERS_LOADING","take","put","call","takeLatest","getUsers","getUsersSaga","response","data","status","getUsersSuccess","watchGetDataSaga","GET_DATA_LOADING","GetDataSaga"],"mappings":"AACA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,iBAAnC,QAA4D,yBAA5D;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,oBAA5C;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAGA,UAAUC,YAAV,GAAyB;AACrB,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACE,QAAD,CAA3B,CADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;AACA,MAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,UAAMR,IAAI,CAACF,eAAD,CAAV;AACH;;AACD,QAAMG,GAAG,CAACQ,eAAe,CAACF,IAAD,CAAhB,CAAT;AACH;;AAED,OAAO,UAAUG,gBAAV,GAA6B;AAChC,QAAMP,UAAU,CAACQ,gBAAD,EAAmBC,WAAnB,CAAhB;AACH","sourcesContent":["\r\nimport { getData, getUsersFailure, GET_USERS_LOADING } from \"../actions/user.actions\";\r\nimport { take, put, call, takeLatest } from 'redux-saga/effects'\r\nimport { getUsers } from \"../api/Api\";\r\n\r\n\r\nfunction* getUsersSaga() {\r\n    const response = yield call(getUsers);\r\n    // function getFields(input, field1) {\r\n    //     let output = [];\r\n    //     for (let i=0; i < input.length ; ++i)\r\n    //         output.push(input[i][field1]);\r\n    //     return output;\r\n    // }\r\n    // console.log(response.data);\r\n    \r\n    const data = response.data;\r\n    if (response.status !== 200) {\r\n        yield take(getUsersFailure)\r\n    }\r\n    yield put(getUsersSuccess(data));\r\n}\r\n\r\nexport function* watchGetDataSaga() {\r\n    yield takeLatest(GET_DATA_LOADING, GetDataSaga)\r\n}"]},"metadata":{},"sourceType":"module"}