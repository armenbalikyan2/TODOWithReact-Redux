{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\src\\\\screens\\\\InputScreen.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport '../style/inputScreen.css';\nimport { originData } from './ListScreen';\nimport { getData } from '../functions/GetData';\nimport { getDataLoading, removeDataLoading, setDataLoading, getDataSuccess } from '../actions';\nimport { watchGetDataSaga } from '../sagas';\nimport { GetDataReducer } from '../reducers/GetDataReducer';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nconst InputPage = ({\n  gettingData,\n  tasks\n}) => {\n  useEffect(() => {\n    gettingData();\n  }, []);\n  console.log(data);\n\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n    originData.push({\n      key: originData.length.toString(),\n      name: values.names.toString()\n    });\n    console.log(originData);\n    props.history.push('/list');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"dynamic_form_item\"\n  }, formItemLayoutWithOutLabel, {\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.List, {\n    name: \"names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, fields.map((field, index) => /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Task' : '',\n      required: false,\n      key: field.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input task's name or delete this field.\"\n      }],\n      noStyle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Add Task\",\n      style: {\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    })), fields.length > 1 ? /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      className: \"dynamic-delete-button\",\n      style: {\n        margin: '0 8px'\n      },\n      onClick: () => {\n        remove(field.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => {\n        add();\n      },\n      style: {\n        width: '60%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), \" Add field\")));\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  data: GetDataReducer()\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gettingData: () => dispatch(getDataLoading)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/screens/InputScreen.js"],"names":["React","useEffect","useSelector","useDispatch","connect","Form","Input","Button","MinusCircleOutlined","PlusOutlined","originData","getData","getDataLoading","removeDataLoading","setDataLoading","getDataSuccess","watchGetDataSaga","GetDataReducer","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","InputPage","gettingData","tasks","console","log","data","onFinish","values","push","key","length","toString","name","names","props","history","fields","add","remove","map","field","index","required","whitespace","message","width","margin","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport '../style/inputScreen.css';\r\nimport { originData } from './ListScreen';\r\nimport { getData } from '../functions/GetData';\r\nimport {\r\n  getDataLoading,\r\n  removeDataLoading,\r\n  setDataLoading,\r\n  getDataSuccess,\r\n} from '../actions';\r\nimport { watchGetDataSaga } from '../sagas';\r\nimport { GetDataReducer } from '../reducers/GetDataReducer';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nconst InputPage = ({gettingData,tasks}) => {\r\n  useEffect(()=>{\r\n    gettingData()\r\n  },[])\r\n  console.log(data);\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form:', values);\r\n    originData.push({\r\n      key: originData.length.toString(),\r\n      name: values.names.toString(),\r\n    });\r\n    console.log(originData);\r\n    props.history.push('/list');\r\n  };\r\n  return (\r\n    <div className=\"addTask\">\r\n      <Form\r\n        name=\"dynamic_form_item\"\r\n        {...formItemLayoutWithOutLabel}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.List name=\"names\">\r\n          {(fields, { add, remove }) => {\r\n            return (\r\n              <div>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    {...(index === 0\r\n                      ? formItemLayout\r\n                      : formItemLayoutWithOutLabel)}\r\n                    label={index === 0 ? 'Task' : ''}\r\n                    required={false}\r\n                    key={field.key}\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message:\r\n                            \"Please input task's name or delete this field.\",\r\n                        },\r\n                      ]}\r\n                      noStyle\r\n                    >\r\n                      <Input placeholder=\"Add Task\" style={{ width: '60%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        style={{ margin: '0 8px' }}\r\n                        onClick={() => {\r\n                          remove(field.name);\r\n                        }}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      add();\r\n                    }}\r\n                    style={{ width: '60%' }}\r\n                  >\r\n                    <PlusOutlined /> Add field\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  data: GetDataReducer(),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  gettingData: () => dispatch(getDataLoading),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputPage);\r\n"]},"metadata":{},"sourceType":"module"}