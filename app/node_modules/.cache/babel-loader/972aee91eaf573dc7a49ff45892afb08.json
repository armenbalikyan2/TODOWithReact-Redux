{"ast":null,"code":"const Columns = props => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(props.tasks);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const handleDelete = key => {\n    const dataSource = data;\n    setData(dataSource.filter(item => item.key !== key));\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/components/common/Columns.js"],"names":["Columns","props","form","Form","useForm","data","setData","useState","tasks","editingKey","setEditingKey","isEditing","record","key","edit","setFieldsValue","name","handleDelete","dataSource","filter","item","cancel","save","row","validateFields","newData","index","findIndex","splice","push","errInfo","console","log"],"mappings":"AACA,MAAMA,OAAO,GAAIC,KAAD,IAAS;AACrB,QAAM,CAACC,IAAD,IAASC,IAAI,CAACC,OAAL,EAAf;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAACN,KAAK,CAACO,KAAP,CAAhC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMI,SAAS,GAAIC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAeJ,UAA7C;;AAEA,QAAMK,IAAI,GAAIF,MAAD,IAAY;AACvBV,IAAAA,IAAI,CAACa,cAAL,CAAoB;AAClBC,MAAAA,IAAI,EAAE,EADY;AAElB,SAAGJ;AAFe,KAApB;AAIAF,IAAAA,aAAa,CAACE,MAAM,CAACC,GAAR,CAAb;AACD,GAND;;AAOA,QAAMI,YAAY,GAAIJ,GAAD,IAAS;AAC5B,UAAMK,UAAU,GAAGb,IAAnB;AACAC,IAAAA,OAAO,CAACY,UAAU,CAACC,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACP,GAAL,KAAaA,GAAzC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMQ,MAAM,GAAG,MAAM;AACnBX,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAFD;;AAIA,QAAMY,IAAI,GAAG,MAAOT,GAAP,IAAe;AAC1B,QAAI;AACF,YAAMU,GAAG,GAAG,MAAMrB,IAAI,CAACsB,cAAL,EAAlB;AACA,YAAMC,OAAO,GAAG,CAAC,GAAGpB,IAAJ,CAAhB;AACA,YAAMqB,KAAK,GAAGD,OAAO,CAACE,SAAR,CAAmBP,IAAD,IAAUP,GAAG,KAAKO,IAAI,CAACP,GAAzC,CAAd;;AAEA,UAAIa,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,cAAMN,IAAI,GAAGK,OAAO,CAACC,KAAD,CAApB;AACAD,QAAAA,OAAO,CAACG,MAAR,CAAeF,KAAf,EAAsB,CAAtB,EAAyB,EAAE,GAAGN,IAAL;AAAW,aAAGG;AAAd,SAAzB;AACAjB,QAAAA,OAAO,CAACmB,OAAD,CAAP;AACAf,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD,OALD,MAKO;AACLe,QAAAA,OAAO,CAACI,IAAR,CAAaN,GAAb;AACAjB,QAAAA,OAAO,CAACmB,OAAD,CAAP;AACAf,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KAfD,CAeE,OAAOoB,OAAP,EAAgB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,OAAhC;AACD;AACF,GAnBD;AAoBH,CA3CD","sourcesContent":["\r\nconst Columns = (props)=>{\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(props.tasks);\r\n    const [editingKey, setEditingKey] = useState('');\r\n  \r\n    const isEditing = (record) => record.key === editingKey;\r\n  \r\n    const edit = (record) => {\r\n      form.setFieldsValue({\r\n        name: '',\r\n        ...record,\r\n      });\r\n      setEditingKey(record.key);\r\n    };\r\n    const handleDelete = (key) => {\r\n      const dataSource = data;\r\n      setData(dataSource.filter((item) => item.key !== key));\r\n    };\r\n  \r\n    const cancel = () => {\r\n      setEditingKey('');\r\n    };\r\n  \r\n    const save = async (key) => {\r\n      try {\r\n        const row = await form.validateFields();\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => key === item.key);\r\n  \r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, { ...item, ...row });\r\n          setData(newData);\r\n          setEditingKey('');\r\n        } else {\r\n          newData.push(row);\r\n          setData(newData);\r\n          setEditingKey('');\r\n        }\r\n      } catch (errInfo) {\r\n        console.log('Validate Failed:', errInfo);\r\n      }\r\n    };\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}