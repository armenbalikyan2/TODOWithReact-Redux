{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\src\\\\screens\\\\ListScreen.js\";\nimport React, { useState } from 'react';\nimport { Table, Radio, Divider, Tag, Space } from 'antd';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: text => /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 23\n    }\n  }, text)\n}];\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst data = [{\n  key: '1',\n  name: 'Walking'\n}, {\n  key: '2',\n  name: 'Gym'\n}, {\n  key: '3',\n  name: 'Reading'\n}]; // rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\n\nconst ListScreen = () => {\n  const [selectionType, setSelectionType] = useState('checkbox');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowSelection: {\n      type: selectionType,\n      ...rowSelection\n    },\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/React.createElement(Space, {\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Invite \", record.lastName), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Delete\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ListScreen;","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/screens/ListScreen.js"],"names":["React","useState","Table","Radio","Divider","Tag","Space","columns","title","dataIndex","render","text","Column","ColumnGroup","data","key","name","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","ListScreen","selectionType","setSelectionType","type","lastName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,MAAlD;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ;AAHpB,CADc,CAAhB;AAOA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BX,KAAhC;AACA,MAAMY,IAAI,GAAG,CACX;AACEC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADW,EAKX;AACED,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALW,EASX;AACED,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATW,CAAb,C,CAaG;;AAEH,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CACG,oBAAmBH,eAAgB,EADtC,EAEE,gBAFF,EAGEC,YAHF;AAKD,GAPkB;AAQnBG,EAAAA,gBAAgB,EAAGC,MAAD,KAAa;AAC7BC,IAAAA,QAAQ,EAAED,MAAM,CAACR,IAAP,KAAgB,eADG;AAE7B;AACAA,IAAAA,IAAI,EAAEQ,MAAM,CAACR;AAHgB,GAAb;AARC,CAArB;;AAeA,MAAMU,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,UAAD,CAAlD;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAE;AACZ4B,MAAAA,IAAI,EAAEF,aADM;AAEZ,SAAGV;AAFS,KADhB;AAKE,IAAA,OAAO,EAAEV,OALX;AAME,IAAA,UAAU,EAAEO,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,MAAM,EAAE,CAACH,IAAD,EAAOa,MAAP,kBACN,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWA,MAAM,CAACM,QAAlB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,CADF;AAwBD,CA1BD;;AA2BA,eAAeJ,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Radio, Divider, Tag, Space } from 'antd';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n];\r\nconst { Column, ColumnGroup } = Table;\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'Walking',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Gym',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Reading',\r\n  },\r\n]; // rowSelection object indicates the need for row selection\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      'selectedRows: ',\r\n      selectedRows\r\n    );\r\n  },\r\n  getCheckboxProps: (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\nconst ListScreen = () => {\r\n  const [selectionType, setSelectionType] = useState('checkbox');\r\n  return (\r\n    <div>\r\n\r\n      <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            <Space size=\"middle\">\r\n              <a>Invite {record.lastName}</a>\r\n              <a>Delete</a>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\nexport default ListScreen;\r\n"]},"metadata":{},"sourceType":"module"}