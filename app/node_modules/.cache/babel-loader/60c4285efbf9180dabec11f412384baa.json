{"ast":null,"code":"import { handleResponse, handleError } from './ApitUtils'; //main api\n\nconst baseUrl = 'http://localhost:3000/tasks'; //getting tasks\n\nexport function getTasks() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n} //setting tasks\n\nexport function saveTask(task) {\n  return fetch(baseUrl + (task.id || ''), {\n    method: task.id ? 'PUT' : 'POST',\n    // POST for create, PUT to update when id already exists.\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  }).then(handleResponse).catch(handleError);\n} //deleting tasks\n\nexport function deleteTask(taskId) {\n  return fetch(baseUrl + taskId, {\n    method: 'DELETE'\n  }).then(handleResponse).catch(handleError);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/api/TaskApi.js"],"names":["handleResponse","handleError","baseUrl","getTasks","fetch","then","catch","saveTask","task","id","method","headers","body","JSON","stringify","deleteTask","taskId"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,aAA5C,C,CACA;;AACA,MAAMC,OAAO,GAAG,6BAAhB,C,CAEA;;AACA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOC,KAAK,CAACF,OAAD,CAAL,CAAeG,IAAf,CAAoBL,cAApB,EAAoCM,KAApC,CAA0CL,WAA1C,CAAP;AACD,C,CAED;;AACA,OAAO,SAASM,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SAAOJ,KAAK,CAACF,OAAO,IAAIM,IAAI,CAACC,EAAL,IAAW,EAAf,CAAR,EAA4B;AACtCC,IAAAA,MAAM,EAAEF,IAAI,CAACC,EAAL,GAAU,KAAV,GAAkB,MADY;AACJ;AAClCE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF6B;AAGtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHgC,GAA5B,CAAL,CAKJH,IALI,CAKCL,cALD,EAMJM,KANI,CAMEL,WANF,CAAP;AAOD,C,CAED;;AACA,OAAO,SAASc,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAOZ,KAAK,CAACF,OAAO,GAAGc,MAAX,EAAmB;AAAEN,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAL,CACJL,IADI,CACCL,cADD,EAEJM,KAFI,CAEEL,WAFF,CAAP;AAGD","sourcesContent":["import { handleResponse, handleError } from './ApitUtils';\r\n//main api\r\nconst baseUrl = 'http://localhost:3000/tasks';\r\n\r\n//getting tasks\r\nexport function getTasks() {\r\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\r\n}\r\n\r\n//setting tasks\r\nexport function saveTask(task) {\r\n  return fetch(baseUrl + (task.id || ''), {\r\n    method: task.id ? 'PUT' : 'POST', // POST for create, PUT to update when id already exists.\r\n    headers: { 'content-type': 'application/json' },\r\n    body: JSON.stringify(task),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\n//deleting tasks\r\nexport function deleteTask(taskId) {\r\n  return fetch(baseUrl + taskId, { method: 'DELETE' })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}