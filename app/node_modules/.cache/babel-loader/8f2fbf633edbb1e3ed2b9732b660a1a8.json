{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\src\\\\components\\\\taskList\\\\TaskListPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\nimport { connect } from 'react-redux';\nimport { EditableCell } from '../common/EditableCell';\nimport axios from 'axios';\nimport { mergedColumns } from '../common/Columns';\nimport { getDataLoading, setDataLoading, removeDataLoading } from '../../actions';\nexport let taskId;\nexport let editingtask;\n\nconst TaskListPage = props => {\n  const [form] = Form.useForm();\n\n  if (props.tasks) {\n    var data = [];\n    props.tasks.map(item => data.push(item.task));\n  }\n\n  useEffect(() => {\n    props.getDataLoading();\n  }, []);\n\n  const handleDelete = key => {\n    taskId = key;\n    props.removeDataLoading();\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks.userData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataLoading: () => dispatch(getDataLoading),\n    removeDataLoading: () => dispatch(removeDataLoading)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/components/taskList/TaskListPage.js"],"names":["React","useState","useEffect","Table","Input","InputNumber","Popconfirm","Form","connect","EditableCell","axios","mergedColumns","getDataLoading","setDataLoading","removeDataLoading","taskId","editingtask","TaskListPage","props","form","useForm","tasks","data","map","item","push","task","handleDelete","key","window","location","reload","body","cell","mapStateToProps","state","userData","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,WAAvB,EAAoCC,UAApC,EAAgDC,IAAhD,QAA4D,MAA5D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SACEC,cADF,EAEEC,cAFF,EAGEC,iBAHF,QAIO,eAJP;AAMA,OAAO,IAAIC,MAAJ;AACP,OAAO,IAAIC,WAAJ;;AAEP,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,IAAD,IAASZ,IAAI,CAACa,OAAL,EAAf;;AAEA,MAAIF,KAAK,CAACG,KAAV,EAAiB;AACf,QAAIC,IAAI,GAAG,EAAX;AACAJ,IAAAA,KAAK,CAACG,KAAN,CAAYE,GAAZ,CAAiBC,IAAD,IAAUF,IAAI,CAACG,IAAL,CAAUD,IAAI,CAACE,IAAf,CAA1B;AACD;;AAEDxB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACN,cAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMe,YAAY,GAAIC,GAAD,IAAS;AAC5Bb,IAAAA,MAAM,GAAGa,GAAT;AACAV,IAAAA,KAAK,CAACJ,iBAAN;AACAe,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,GAJD;;AAKA,sBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEZ,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAE;AACVa,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAExB;AADF;AADI,KADd;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEa,IAPd;AAQE,IAAA,OAAO,EAAEX,aARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CA/BD;;AAiCA,SAASuB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLd,IAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYe;AADd,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL1B,IAAAA,cAAc,EAAE,MAAM0B,QAAQ,CAAC1B,cAAD,CADzB;AAELE,IAAAA,iBAAiB,EAAE,MAAMwB,QAAQ,CAACxB,iBAAD;AAF5B,GAAP;AAID;;AACD,eAAeN,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { EditableCell } from '../common/EditableCell';\r\nimport axios from 'axios';\r\nimport { mergedColumns } from '../common/Columns';\r\n\r\nimport {\r\n  getDataLoading,\r\n  setDataLoading,\r\n  removeDataLoading,\r\n} from '../../actions';\r\n\r\nexport let taskId;\r\nexport let editingtask;\r\n\r\nconst TaskListPage = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  if (props.tasks) {\r\n    var data = [];\r\n    props.tasks.map((item) => data.push(item.task));\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getDataLoading();\r\n  }, []);\r\n\r\n  const handleDelete = (key) => {\r\n    taskId = key;\r\n    props.removeDataLoading();\r\n    window.location.reload(false);\r\n  };\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: state.tasks.userData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDataLoading: () => dispatch(getDataLoading),\r\n    removeDataLoading: () => dispatch(removeDataLoading),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskListPage);\r\n"]},"metadata":{},"sourceType":"module"}