{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Form,Input,Button}from'antd';import{MinusCircleOutlined,PlusOutlined}from'@ant-design/icons';import'./inputScreen.css';import{connect}from'react-redux';import{getDataLoading as _getDataLoading,setDataLoading as _setDataLoading}from'../../actions';var formItemLayout={labelCol:{xs:{span:24},sm:{span:4}},wrapperCol:{xs:{span:24},sm:{span:20}}};var formItemLayoutWithOutLabel={wrapperCol:{xs:{span:24,offset:0},sm:{span:20,offset:4}}};export var task={};var AddingTaskPage=function AddingTaskPage(props){useEffect(function(){props.getDataLoading();},[]);var onFinish=function onFinish(values){task={id:props.tasks.length.toString(),name:values.names.toString()};props.setDataLoading();props.history.push('/list');window.location.reload(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"addTask\"},/*#__PURE__*/React.createElement(Form,Object.assign({name:\"dynamic_form_item\"},formItemLayoutWithOutLabel,{onFinish:onFinish}),/*#__PURE__*/React.createElement(Form.List,{name:\"names\"},function(fields,_ref){var add=_ref.add,remove=_ref.remove;return/*#__PURE__*/React.createElement(\"div\",null,fields.map(function(field,index){return/*#__PURE__*/React.createElement(Form.Item,Object.assign({},index===0?formItemLayout:formItemLayoutWithOutLabel,{label:index===0?'Task':'',required:false,key:field.key}),/*#__PURE__*/React.createElement(Form.Item,Object.assign({},field,{validateTrigger:['onChange','onBlur'],rules:[{required:true,whitespace:true,message:\"Please input task's name or delete this field.\"}],noStyle:true}),/*#__PURE__*/React.createElement(Input,{placeholder:\"Add Task\",style:{width:'60%'}})),fields.length>1?/*#__PURE__*/React.createElement(MinusCircleOutlined,{className:\"dynamic-delete-button\",style:{margin:'0 8px'},onClick:function onClick(){remove(field.name);}}):null);}),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"dashed\",onClick:function onClick(){add();},style:{width:'60%'}},/*#__PURE__*/React.createElement(PlusOutlined,null),\" Add field\")));}),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Submit\"))));};function mapStateToProps(state){return{tasks:state.tasks.userData};}function mapDispatchToProps(dispatch){return{getDataLoading:function getDataLoading(){return dispatch(_getDataLoading);},setDataLoading:function setDataLoading(){return dispatch(_setDataLoading);}};}export default connect(mapStateToProps,mapDispatchToProps)(AddingTaskPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/components/addTask/AddingTaskPage.js"],"names":["React","useState","useEffect","Form","Input","Button","MinusCircleOutlined","PlusOutlined","connect","getDataLoading","setDataLoading","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","task","AddingTaskPage","props","onFinish","values","id","tasks","length","toString","name","names","history","push","window","location","reload","fields","add","remove","map","field","index","key","required","whitespace","message","width","margin","mapStateToProps","state","userData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './inputScreen.css';\r\nimport { connect } from 'react-redux';\r\nimport { getDataLoading, setDataLoading } from '../../actions';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nexport let task = {};\r\nconst AddingTaskPage = (props) => {\r\n  useEffect(() => {\r\n    props.getDataLoading();\r\n  }, []);\r\n  const onFinish = (values) => {\r\n    task = {\r\n      id: props.tasks.length.toString(),\r\n      name: values.names.toString(),\r\n    };\r\n\r\n    props.setDataLoading();\r\n    props.history.push('/list');\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addTask\">\r\n      <Form\r\n        name=\"dynamic_form_item\"\r\n        {...formItemLayoutWithOutLabel}\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.List name=\"names\">\r\n          {(fields, { add, remove }) => {\r\n            return (\r\n              <div>\r\n                {fields.map((field, index) => (\r\n                  <Form.Item\r\n                    {...(index === 0\r\n                      ? formItemLayout\r\n                      : formItemLayoutWithOutLabel)}\r\n                    label={index === 0 ? 'Task' : ''}\r\n                    required={false}\r\n                    key={field.key}\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      validateTrigger={['onChange', 'onBlur']}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message:\r\n                            \"Please input task's name or delete this field.\",\r\n                        },\r\n                      ]}\r\n                      noStyle\r\n                    >\r\n                      <Input placeholder=\"Add Task\" style={{ width: '60%' }} />\r\n                    </Form.Item>\r\n                    {fields.length > 1 ? (\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        style={{ margin: '0 8px' }}\r\n                        onClick={() => {\r\n                          remove(field.name);\r\n                        }}\r\n                      />\r\n                    ) : null}\r\n                  </Form.Item>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      add();\r\n                    }}\r\n                    style={{ width: '60%' }}\r\n                  >\r\n                    <PlusOutlined /> Add field\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: state.tasks.userData,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getDataLoading: () => dispatch(getDataLoading),\r\n    setDataLoading: () => dispatch(setDataLoading),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingTaskPage);\r\n"]},"metadata":{},"sourceType":"module"}