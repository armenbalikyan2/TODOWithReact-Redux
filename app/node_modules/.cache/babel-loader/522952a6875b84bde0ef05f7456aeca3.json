{"ast":null,"code":"import { handleResponse, handleError } from './ApitUtils';\nimport axios from 'axios'; //main api\n\nconst baseUrl = 'http://localhost:3000/tasks'; //getting tasks\n\nexport function getTasks() {\n  return axios.get(baseUrl);\n} //setting tasks\n\nexport function saveTask(task) {\n  return fetch(baseUrl + (task.id || ''), {\n    method: task.id ? 'PUT' : 'POST',\n    // POST for create, PUT to update when id already exists.\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  }).then(handleResponse).catch(handleError);\n} //deleting tasks\n\nexport function deleteTask(taskId) {\n  return fetch(baseUrl + taskId, {\n    method: 'DELETE'\n  }).then(handleResponse).catch(handleError);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/api/TaskApi.js"],"names":["handleResponse","handleError","axios","baseUrl","getTasks","get","saveTask","task","fetch","id","method","headers","body","JSON","stringify","then","catch","deleteTask","taskId"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,aAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,OAAO,GAAG,6BAAhB,C,CAEA;;AACA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOF,KAAK,CAACG,GAAN,CAAUF,OAAV,CAAP;AACD,C,CAED;;AACA,OAAO,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SAAOC,KAAK,CAACL,OAAO,IAAII,IAAI,CAACE,EAAL,IAAW,EAAf,CAAR,EAA4B;AACtCC,IAAAA,MAAM,EAAEH,IAAI,CAACE,EAAL,GAAU,KAAV,GAAkB,MADY;AACJ;AAClCE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF6B;AAGtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHgC,GAA5B,CAAL,CAKJQ,IALI,CAKCf,cALD,EAMJgB,KANI,CAMEf,WANF,CAAP;AAOD,C,CAED;;AACA,OAAO,SAASgB,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAOV,KAAK,CAACL,OAAO,GAAGe,MAAX,EAAmB;AAAER,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAL,CACJK,IADI,CACCf,cADD,EAEJgB,KAFI,CAEEf,WAFF,CAAP;AAGD","sourcesContent":["import { handleResponse, handleError } from './ApitUtils';\r\nimport axios from 'axios';\r\n//main api\r\nconst baseUrl = 'http://localhost:3000/tasks';\r\n\r\n//getting tasks\r\nexport function getTasks() {\r\n  return axios.get(baseUrl);\r\n}\r\n\r\n//setting tasks\r\nexport function saveTask(task) {\r\n  return fetch(baseUrl + (task.id || ''), {\r\n    method: task.id ? 'PUT' : 'POST', // POST for create, PUT to update when id already exists.\r\n    headers: { 'content-type': 'application/json' },\r\n    body: JSON.stringify(task),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\n//deleting tasks\r\nexport function deleteTask(taskId) {\r\n  return fetch(baseUrl + taskId, { method: 'DELETE' })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}