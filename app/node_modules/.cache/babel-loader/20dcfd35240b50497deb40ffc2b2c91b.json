{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\todoWithReact-Redux\\\\todoWithReact-\\\\app\\\\src\\\\components\\\\common\\\\Columns.js\";\n\nconst Columns = props => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(props.tasks);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const handleDelete = key => {\n    const dataSource = data;\n    setData(dataSource.filter(item => item.key !== key));\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n};\n\nconst columns = [{\n  title: 'name',\n  dataIndex: 'name',\n  width: '25%',\n  editable: true\n}, {\n  title: 'operation',\n  dataIndex: 'operation',\n  render: (_, record) => {\n    const editable = isEditing(record);\n    return editable ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"javascript:;\",\n      onClick: () => save(record.key),\n      style: {\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Sure to cancel?\",\n      onConfirm: cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))) : /*#__PURE__*/React.createElement(\"a\", {\n      disabled: editingKey !== '',\n      onClick: () => edit(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Edit\");\n  }\n}, {\n  title: 'operation',\n  dataIndex: 'operation',\n  render: (text, record) => props.tasks.length >= 1 ? /*#__PURE__*/React.createElement(Popconfirm, {\n    title: \"Sure to delete?\",\n    onConfirm: () => handleDelete(record.key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Delete\")) : null\n}];\nexport const mergedColumns = columns.map(col => {\n  if (!col.editable) {\n    return col;\n  }\n\n  return { ...col,\n    onCell: record => ({\n      record,\n      inputType: col.dataIndex === 'age' ? 'number' : 'text',\n      dataIndex: col.dataIndex,\n      title: col.title,\n      editing: isEditing(record)\n    })\n  };\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/todoWithReact-Redux/todoWithReact-/app/src/components/common/Columns.js"],"names":["Columns","props","form","Form","useForm","data","setData","useState","tasks","editingKey","setEditingKey","isEditing","record","key","edit","setFieldsValue","name","handleDelete","dataSource","filter","item","cancel","save","row","validateFields","newData","index","findIndex","splice","push","errInfo","console","log","columns","title","dataIndex","width","editable","render","_","marginRight","text","length","mergedColumns","map","col","onCell","inputType","editing"],"mappings":"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","sourcesContent":["\r\nconst Columns = (props)=>{\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(props.tasks);\r\n    const [editingKey, setEditingKey] = useState('');\r\n  \r\n    const isEditing = (record) => record.key === editingKey;\r\n  \r\n    const edit = (record) => {\r\n      form.setFieldsValue({\r\n        name: '',\r\n        ...record,\r\n      });\r\n      setEditingKey(record.key);\r\n    };\r\n    const handleDelete = (key) => {\r\n      const dataSource = data;\r\n      setData(dataSource.filter((item) => item.key !== key));\r\n    };\r\n  \r\n    const cancel = () => {\r\n      setEditingKey('');\r\n    };\r\n  \r\n    const save = async (key) => {\r\n      try {\r\n        const row = await form.validateFields();\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => key === item.key);\r\n  \r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, { ...item, ...row });\r\n          setData(newData);\r\n          setEditingKey('');\r\n        } else {\r\n          newData.push(row);\r\n          setData(newData);\r\n          setEditingKey('');\r\n        }\r\n      } catch (errInfo) {\r\n        console.log('Validate Failed:', errInfo);\r\n      }\r\n    };\r\n}\r\n\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'name',\r\n    dataIndex: 'name',\r\n    width: '25%',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'operation',\r\n    dataIndex: 'operation',\r\n    render: (_, record) => {\r\n      const editable = isEditing(record);\r\n      return editable ? (\r\n        <span>\r\n          <a\r\n            href=\"javascript:;\"\r\n            onClick={() => save(record.key)}\r\n            style={{\r\n              marginRight: 8,\r\n            }}\r\n          >\r\n            Save\r\n          </a>\r\n          <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n            <a>Cancel</a>\r\n          </Popconfirm>\r\n        </span>\r\n      ) : (\r\n        <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n          Edit\r\n        </a>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: 'operation',\r\n    dataIndex: 'operation',\r\n    render: (text, record) =>\r\n      props.tasks.length >= 1 ? (\r\n        <Popconfirm\r\n          title=\"Sure to delete?\"\r\n          onConfirm={() => handleDelete(record.key)}\r\n        >\r\n          <a>Delete</a>\r\n        </Popconfirm>\r\n      ) : null,\r\n  },\r\n];\r\n\r\nexport const mergedColumns = columns.map((col) => {\r\n  if (!col.editable) {\r\n    return col;\r\n  }\r\n\r\n  return {\r\n    ...col,\r\n    onCell: (record) => ({\r\n      record,\r\n      inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n      dataIndex: col.dataIndex,\r\n      title: col.title,\r\n      editing: isEditing(record),\r\n    }),\r\n  };\r\n});\r\n"]},"metadata":{},"sourceType":"module"}